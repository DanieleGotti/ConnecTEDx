// handler.js

const connect_to_db = require('./db');
const User = require('./User');

module.exports.get_user_by_id = (event, context, callback) => {
    context.callbackWaitsForEmptyEventLoop = false;
    console.log('Received event:', JSON.stringify(event, null, 2));

    let userId;
    let body = {};

    try {
        if (event.id) {
            userId = event.id;
            console.log(`User ID extracted: ${userId}`);
        } else {
            throw new Error('User ID is missing in the request');
        }
    } catch (err) {
        console.error('Error processing request:', err);
        callback(null, {
            statusCode: 400,
            headers: { 'Content-Type': 'text/plain' },
            body: err.message
        });
        return;
    }

    connect_to_db().then(() => {
        console.log('=> get user by id:', userId);

        User.findOne({ _id: userId })
            .then(user => {
                if (user) {
                    console.log('User found:', user);
                    callback(null, {
                        statusCode: 200,
                        body: JSON.stringify(user)
                    });
                } else {
                    console.log('User not found for ID:', userId);
                    callback(null, {
                        statusCode: 404,
                        headers: { 'Content-Type': 'text/plain' },
                        body: 'User not found.'
                    });
                }
            })
            .catch(err => {
                console.error('Error fetching user:', err);
                callback(null, {
                    statusCode: err.statusCode || 500,
                    headers: { 'Content-Type': 'text/plain' },
                    body: 'Could not fetch the user.'
                });
            });
    }).catch(err => {
        console.error('Error connecting to database:', err);
        callback(null, {
            statusCode: 500,
            headers: { 'Content-Type': 'text/plain' },
            body: 'Database connection error.'
        });
    });
};

// db.js - CONNECTION TO DB

const mongoose = require('mongoose');
mongoose.Promise = global.Promise;
let isConnected;

require('dotenv').config({ path: './variables.env' });

module.exports = connect_to_db = () => {
    if (isConnected) {
        console.log('=> using existing database connection');
        return Promise.resolve();
    }

    console.log('=> using new database connection');
    return mongoose.connect(process.env.DB, {
        dbName: 'unibg_tedx_2024',
        useNewUrlParser: true,
        useUnifiedTopology: true
    }).then(db => {
        isConnected = db.connections[0].readyState;
    });
};

// User.js

const mongoose = require('mongoose');

const user_schema = new mongoose.Schema({
    name: String,
    surname: String,
    position: String,
    email: String,
    password: String,
    url_user_img: String
}, { collection: 'users' });

module.exports = mongoose.model('user', user_schema);
